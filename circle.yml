machine:
  services:
    - docker
  environment:
    PROJECT_NAME: iconic-setup-91510
    CLUSTER_NAME: cluster-1
    CLOUDSDK_COMPUTE_ZONE: europe-west1-b

dependencies:
  pre:
    - echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ${HOME}/gcloud-service-key.json
    - echo $CA_CRT | base64 --decode --ignore-garbage > ${HOME}/ca.crt
    - sudo /opt/google-cloud-sdk/bin/gcloud --quiet components update --version 146.0.0
    - sudo /opt/google-cloud-sdk/bin/gcloud --quiet components update --version 146.0.0 kubectl
    - sudo /opt/google-cloud-sdk/bin/gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
    - sudo /opt/google-cloud-sdk/bin/gcloud config set project $PROJECT_NAME
    - sudo /opt/google-cloud-sdk/bin/gcloud --quiet config set container/cluster $CLUSTER_NAME
    - sudo /opt/google-cloud-sdk/bin/gcloud config set compute/zone ${CLOUDSDK_COMPUTE_ZONE}
    - sudo /opt/google-cloud-sdk/bin/gcloud --quiet container clusters get-credentials $CLUSTER_NAME
    - sudo cat ${HOME}/.kube/config

  override:
    - lein bower install
    - lein uberjar
    - docker info
    - docker build -t eu.gcr.io/${PROJECT_NAME}/w2f2:$CIRCLE_SHA1  .
    - docker tag eu.gcr.io/${PROJECT_NAME}/w2f2:$CIRCLE_SHA1 eu.gcr.io/${PROJECT_NAME}/w2f2:latest
    - sudo /opt/google-cloud-sdk/bin/gcloud --verbosity=debug docker -- push eu.gcr.io/${PROJECT_NAME}/w2f2

deployment:
  prod:
    branch: develop
    commands:
#      - sudo chown -R ubuntu:ubuntu /home/ubuntu/.kube
#      - kubectl config set-cluster cluster-staging --embed-certs=true  --server=https://35.187.80.182 --certificate-authority=${HOME}/ca.crt
#      - kubectl config set-credentials circle-staging --token=$K8S_USER_TOKEN
#      - kubectl config set-context circle-staging --cluster=cluster-staging --user=circle-staging --namespace=default
#      - kubectl config use-context circle-staging
      - gcloud container clusters get-credentials cluster-1 --zone europe-west1-b --project iconic-setup-91510
      - kubectl delete deployment w2f2
      - kubectl apply -f docker/kube/w2f2-d.yml